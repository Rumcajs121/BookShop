@page "/booksAll"
@inject IBooksService BooksService
@inject ILocalStorageService LocalStorage
@inject EventService EventService
<div class="text-center p-3"><h3 class="m-2">Lista Książek</h3></div>

@if (Books != null && Books.Any())
{
    <div class="row">
        @foreach (var book in Books)
        {
            <div class="container col-md-4 mb-5 ">
                <div class="card hoverable-card" @onmouseover="() => OnTileHover(true)" @onmouseout="() => OnTileHover(false)">
                    <a href="@($"/getBook/{book.Guid}")"><img src="@book.Image" alt="@book.Title" class="card-img-top"></a>
                    <div class="card-body d-flex flex-column">
                        <div class="card-text text-center">
                            <h5 class="card-title fw-bolder">@book.Title</h5>
                        </div>
                        <div class="card-buttons mt-3 d-flex justify-content-between">
                            <div>
                                <button class="btn btn-sm btn-secondary" disabled>Cena: @book.Price PLN</button>
                            </div>
                            <div>
                                <a class="btn btn-sm btn-success" href="@($"/getBook/{book.Guid}")">Szczegóły</a>
                            </div>
                            <div>
                                @if (!book.Availability)
                                {
                                    <button class="btn btn-sm btn-dark" disabled>Niedostępny</button>
                                }
                                else
                                {
                                    <button class="btn btn-sm btn-danger" @onclick="()=>AddToCart(book)">Kup teraz</button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

else
{
    <div class="loading-content text-center">
        <div class="spinner-border text-primary" role="status">
        </div>
        <p class="mt-2">Trwa ładowanie danych...</p>
    </div>
}
@code {
    private List<BookDto> Books;

    protected override async Task OnInitializedAsync()
    {
        Books = await BooksService.GetAll();
    }
    private async Task AddToCart(BookDto book)
    {
        await BooksService.AddToCart(book);
        EventService.NotifyCartUpdated();
    }
     private bool isTileHovered = false;

    private void OnTileHover(bool isHovered)
    {
        isTileHovered = isHovered;
    }
}
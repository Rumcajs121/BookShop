@page "/booksAll"
@inject IBooksService BooksService
@inject ILocalStorageService LocalStorage
<div class="text-center p-3"><h3 class="m-2">Lista Książek</h3></div>

@if (Books != null && Books.Any())
{
    <div class="row">
        @foreach (var book in Books)
        {
            <div class="col-md-4 mb-5">
                <div class="card hoverable-card">
                    <img src="@book.Image" alt="@book.Title" class="card-img-top">
                    <div class="card-body d-flex flex-column justify-content-center">
                        <div class="card-text text-center">
                            <h5 class="card-title fw-bolder">@book.Title</h5>
                        </div>
                        <div class="card-buttons mt-3">
                            <span class="btn btn-sm btn-secondary">Cena: @book.Price PLN</span>
                            <a class="btn btn-sm btn-success" href="@($"/getBook/{book.Guid}")">Szczegóły</a>
                            <button class="btn btn-sm btn-danger" @onclick="()=>AddToCart(book)">Kup teraz</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="loading-content text-center">
        <div class="spinner-border text-primary" role="status">
        </div>
        <p class="mt-2">Trwa ładowanie danych...</p>
    </div>
}
@code {
    private bool IsLoading { get; set; } = true;
    private List<BookDto> Books;

    protected override async Task OnInitializedAsync()
    {
        Books = await BooksService.GetAll();
        IsLoading = false;
    }
    private async Task AddToCart(BookDto book)
    {
        var cart = await LocalStorage.GetItemAsync<List<ShoppingCart>>("cart");
        if (cart == null)
        {
            cart = new List<ShoppingCart>();
        }
        var cartItem = new ShoppingCart
            {
                BookId = book.Guid,
                Title = book.Title,
                Price = book.Price,
                Image = book.Image,
                Quantity = 1 
            };
        cart.Add(cartItem);
        await LocalStorage.SetItemAsync("cart",cart);
    }

}
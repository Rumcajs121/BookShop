@page "/booksAll"
@inject IBooksService BooksService

<div class="text-center p-3"><h3 class="m-2">Lista Książek</h3></div>

@if (Books != null && Books.Any())
{
    <div class="row">
        @foreach (var book in Books)
        {
            <div class="col-md-4 mb-4">
                <div class="card hoverable-card" @onmouseover="() => OnTileHover(true)" @onmouseout="() => OnTileHover(false)">
                    <img src="@book.Image" alt="@book.Title" class="card-img-top">
                    <div class="card-body">
                        <h5 class="card-title">@book.Title</h5>
                        <p class="card-text book-description">
                            @book.Description
                        </p>
                        
                    </div>
                    <div class="card-buttons text-center">
                        <span class="btn-sm btn-secondary">Cena: @book.Price PLN</span>
                        <a class="btn btn-sm btn-success" href="@($"/getBook/{book.Guid}")"> Szczegóły </a>
                        <button class="btn btn-sm btn-danger">Kup teraz</button>

                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
        <div class="loading-content">
            <div class="spinner-border text-primary" role="status">
            </div>
            <p>Trwa ładowanie danych...</p>
        </div>

}
@code {
    private bool IsLoading { get; set; } = true;
    private List<BookDto> Books;

    protected override async Task OnInitializedAsync()
    {
        Books = await BooksService.GetAll();
        IsLoading = false;
    }
    private bool isTileHovered = false;

    private void OnTileHover(bool isHovered)
    {
        isTileHovered = isHovered;
    }
}
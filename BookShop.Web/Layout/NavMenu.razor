@inject IBooksService BooksService
@inject EventService EventService
<nav class="navbar navbar-expand-md navbar-dark bg-dark mb-4">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BlazingTopMenu</a>
        <button class="navbar-toggler @NavButtonCssClass" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse"
                aria-controls="navbarCollapse" aria-label="Toggle navigation" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse @NavBarCssClass" id="navbarCollapse" @onclick="ToggleNavMenu">
            <ul class="navbar-nav me-auto mb-2 mb-md-0">
                <li class="nav-item">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <span class="oi oi-home" aria-hidden="true"></span> Home
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="booksAll">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> GettAll
                    </NavLink>
                </li>
            </ul>
            <ul class="navbar-nav">
                <li class="nav-item">
                    <NavLink class="nav-link" href="shopingCart">
                        <div class="d-flex align-items-center">
                            <div class="oi oi-list-rich" aria-hidden="true">Koszyk</div>
                            @if (CartItemCount > 0)
                            {
                                <div class="badge bg-danger ms-2">
                                    @CartItemCount
                                </div>
                            }
                        </div>
                     
                    </NavLink>
                </li>
            </ul>
        </div>
    </div>
</nav>

@code {
    private bool collapseNavMenu = true;
    private string? NavBarCssClass => collapseNavMenu ? null : "show";
    private string? NavButtonCssClass => collapseNavMenu ? "collapsed" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    private int CartItemCount { get; set; }

    protected override void OnInitialized()
    {
        UpdateCartItemCount();
        EventService.OnCartUpdated += UpdateCartItemCount;

    }

    private void UpdateCartItemCount()
    {
        InvokeAsync(async () =>
        {
            CartItemCount = await BooksService.ShopingCartCount();
            StateHasChanged();
        });
    }

    private void Dispose()
    {
        EventService.OnCartUpdated -= UpdateCartItemCount;
    }
}